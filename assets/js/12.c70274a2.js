(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{214:function(t,a,r){"use strict";r.r(a);var s=r(0),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"c"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#c"}},[t._v("#")]),t._v(" C++")]),t._v(" "),r("h1",{attrs:{id:"操作系统"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#操作系统"}},[t._v("#")]),t._v(" 操作系统")]),t._v(" "),r("h2",{attrs:{id:"进程和线程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#进程和线程"}},[t._v("#")]),t._v(" 进程和线程")]),t._v(" "),r("h3",{attrs:{id:"_1-进程和线程的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-进程和线程的区别"}},[t._v("#")]),t._v(" 1.进程和线程的区别")]),t._v(" "),r("ul",[r("li",[t._v("进程是资源分配(内存,文件,socket,signal等)的基本单位,线程是作为独立运行及调度的基本单位(kernel based thread).但是实际上要区分用户线程模式,内核线程模式,和混合线程模式.(创建,销毁,调度),在linux中,线程和进程作为task,都是通过clone来创建的,区别在于是否共享地址空间.共享空间的task被看作是thread.系统开销,通信方面都有区别.")])]),t._v(" "),r("h3",{attrs:{id:"_2-什么是守护进程-僵尸进程-孤儿进程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-什么是守护进程-僵尸进程-孤儿进程"}},[t._v("#")]),t._v(" 2.什么是守护进程&僵尸进程&孤儿进程")]),t._v(" "),r("ul",[r("li",[t._v("fork()完以后,父进程未用wait 或者waitpid等待子进程,子进程退出后,进程描述符仍驻留在系统中.但是资源已经释放.(僵尸进程)")]),t._v(" "),r("li",[t._v("守护进程和孤儿进程都是父进程结束,子进程托管给init,区别在于前者是主动中止父进程.(nohup 可以阻止SIGHUP信号,与session分离)")])]),t._v(" "),r("h3",{attrs:{id:"_3-fork-vfork"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-fork-vfork"}},[t._v("#")]),t._v(" 3.fork&vfork")]),t._v(" "),r("ul",[r("li",[t._v("fork()->clone->do_fork()会创建一个与调用进程相同的副本,拥有相同的内存映像,同样的环境字符串和同样的打开文件,以及堆栈但是涉及到两个不同的虚拟地址空间,不可写的内存是共享的,一旦进行修改,就会进行写时复制.(win中一开始地址空间就是不同的),vforck()共享父进程的地址空间(连虚拟空间也一样),且父进程会阻塞至子进程exit,主要用于exec,")])]),t._v(" "),r("h1",{attrs:{id:"网络"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#网络"}},[t._v("#")]),t._v(" 网络")]),t._v(" "),r("h2",{attrs:{id:"tcp-ip"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip"}},[t._v("#")]),t._v(" TCP-IP")]),t._v(" "),r("h2",{attrs:{id:"http-https"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#http-https"}},[t._v("#")]),t._v(" HTTP&HTTPs")])])}),[],!1,null,null,null);a.default=e.exports}}]);