(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{212:function(n,e,t){"use strict";t.r(e);var s=t(0),l=Object(s.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h3",{attrs:{id:"_1-two-sum"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-two-sum"}},[n._v("#")]),n._v(" 1. TWO SUM")]),n._v(" "),t("ul",[t("li",[n._v("16 ms")]),n._v(" "),t("li",[n._v("14 MB")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('class Solution(object):\n    def twoSum(self, nums, target):\n        """\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        """\n        empty = {}\n        for i in range(len(nums)):\n            if not empty.has_key(nums[i]):\n            #if nums[i] not in empty.keys():\n            #use this will slow down \n                empty[target-nums[i]] = i\n            else:\n                return[empty[nums[i]],i]\n')])])]),t("ul",[t("li",[n._v("12 ms")]),n._v(" "),t("li",[n._v("11.6 MB")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("\nclass Solution {\n    public:\n    vector<int> twoSum(vector<int>& nums,int target){\n        map<int,int> empty;\n        vector<int> result;\n        for (int i=0;i<nums.size();i++){\n            if(!empty.count(nums[i])){\n                empty[target-nums[i]] = i;\n            }\n            else{\n                result.push_back(empty[nums[i]]);\n                result.push_back(i);\n                return result;\n            }\n        }\n        return result;\n    }\n};\n")])])]),t("h3",{attrs:{id:"_2-add-two-numbers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-add-two-numbers"}},[n._v("#")]),n._v(" 2.add_Two_numbers")]),n._v(" "),t("ul",[t("li",[n._v("68ms")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('# Definition for singly-linked list.\n# class ListNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution(object):\n    def addTwoNumbers(self, l1, l2):\n        """\n        :type l1: ListNode\n        :type l2: ListNode\n        :rtype: ListNode\n        """\n        resultList = ListNode()\n        re = resultList\n        up = 0\n        while(l1 and l2):\n            result = l1.val+l2.val+up\n            if(result>=10):\n                re.val = result%10\n                up = 1\n            else:\n                re.val =result\n                up = 0\n            l1 = l1.next\n            l2 = l2.next\n            if(l1 and l2):\n                re.next = ListNode()\n                re = re.next\n        while(l1):\n            re.next = ListNode()\n            re = re.next\n            result = up+l1.val\n            if(result>=10):\n                re.val = result%10\n                up = 1\n            else:\n                re.val =result\n                up = 0\n            l1 = l1.next\n        while(l2):\n            re.next = ListNode()\n            re = re.next\n            result = up+l2.val\n            if(result>=10):\n                re.val = result%10\n                up = 1\n            else:\n                re.val =result\n                up = 0\n            l2 = l2.next\n        while(up):\n            re.next = ListNode()\n            re = re.next\n            re.val = 1\n            up = 0\n        return resultList\n')])])]),t("h3",{attrs:{id:"_3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3"}},[n._v("#")]),n._v(" 3")]),n._v(" "),t("ul",[t("li",[n._v("252 ms")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('class Solution(object):\n    def lengthOfLongestSubstring(self, s):\n        """\n        :type s: str\n        :rtype: int\n        """\n        if(len(s)==1):\n            return 1;\n        pre = -1\n        maxl = 0\n        tail = 1\n        while(len(s)-pre>=maxl and tail<len(s)):\n            i = tail-1\n            while(i>pre):\n                if(s[i]==s[tail]):\n                    break\n                else:\n                    i = i-1\n            if(tail-i>=maxl):\n                maxl = tail-i\n            pre = i\n            tail = tail+1\n        return maxl\n')])])]),t("h3",{attrs:{id:"_4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4"}},[n._v("#")]),n._v(" 4")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("def fi(nums1,nums2):\n    l1 = len(nums1)\n    l2 = len(nums2)\n    s = nums1 if(l1<=l2) else nums2\n    c = nums1 if(l1>l2) else nums2\n    k  = (l1+l2+1)/2\n    left = 0\n    right = len(s)\n    while(left<=right):\n        i = (left+right)/2\n        j = k-i\n        if(i<len(s) and  c[j-1]>s[i]):\n            left = i+1\n        elif(i>0 and s[i-1]>c[j]):\n            right =i-1\n        else:\n            if(i==0):\n                left_max = c[j-1]\n            elif(j==0):\n                left_max = s[i-1]\n            else:\n                left_max = max(s[i-1],c[j-1])\n            if((l1+l2)%2==1):\n                return left_max\n            if(i==len(s)):\n                right_min = c[j]\n            elif(j==len(c)):\n                right_min = s[i]\n            else:\n                right_min = min(c[j],s[i])\n            return (left_max+right_min)/2.0\n")])])])])}),[],!1,null,null,null);e.default=l.exports}}]);